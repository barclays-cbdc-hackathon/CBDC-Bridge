apply plugin: 'org.springframework.boot'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    // Corda dependencies.
    compile "$cordaReleaseGroup:corda-rpc:$cordaVersion"

    // CorDapp dependencies.
    compile project(":contracts")
    compile project(":workflows")
//    implementation project(":cbdc-bridge")
    compile("org.springframework.boot:spring-boot-starter-websocket:$springBootVersion") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-web:${log4jVersion}"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
}

springBoot {
    mainClassName = "com.cbdc.industria.tech.webserver.ServerKt"
}

/* This task will start the springboot server that connects to your node (via RPC connection). All of the http requests
 * are in the Controller file. You can leave the Server.kt and NodeRPCConnection.kt file untouched for your use.
 */
task runServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.cbdc.industria.tech.webserver.ServerKt'
    args '--server.port=10050', '--config.rpc.host=localhost', '--config.rpc.port=10006', '--config.rpc.username=user1', '--config.rpc.password=test'
}

quasar {
    excludePackages = [
            'org.jetbrains.kotlin.com.intellij**',
            'io.gitlab.arturbosch**'
    ]
}

task detekt(type: JavaExec) {
    main = "io.gitlab.arturbosch.detekt.cli.Main"
    classpath = configurations.detekt
    def input = "$projectDir"
    def config = "${project.rootDir}/detekt-config.yml"
    def baseline = "${project.rootDir}/detekt-baseline.xml"
    def excludes = "**/test/**,.*/resources/.*"
    def output = "$projectDir/build/reports/detekt/detekt.html"
    def outputXml = "$projectDir/build/reports/detekt/detekt.xml"
    def outputSarif = "$projectDir/build/reports/detekt/detekt.sarif"
    def params = ['-i', input, '-c', config, '-b', baseline,'-ex', excludes, '-r', "html:$output", "-r", "xml:$outputXml",'-r',"sarif:$outputSarif"]
    args(params)
}
